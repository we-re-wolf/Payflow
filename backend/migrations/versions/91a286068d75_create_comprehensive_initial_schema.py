"""Create comprehensive initial schema

Revision ID: 91a286068d75
Revises: 
Create Date: 2025-10-01 11:19:58.082374

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '91a286068d75'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('department',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('parent_department_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_department_id'], ['department.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('designation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('payroll_period',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('salary_component',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('type', sa.Enum('EARNING', 'DEDUCTION', name='salarycomponenttype'), nullable=False),
    sa.Column('is_taxable', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('name')
    )
    op.create_table('salary_structure',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)

    op.create_table('employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_number', sa.String(length=50), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('date_of_joining', sa.Date(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('marital_status', sa.String(length=20), nullable=True),
    sa.Column('personal_email', sa.String(length=120), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('designation_id', sa.Integer(), nullable=True),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ),
    sa.ForeignKeyConstraint(['designation_id'], ['designation.id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    with op.batch_alter_table('employee', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_employee_employee_number'), ['employee_number'], unique=True)

    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('salary_structure_component',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('structure_id', sa.Integer(), nullable=False),
    sa.Column('component_id', sa.Integer(), nullable=False),
    sa.Column('formula', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['salary_component.id'], ),
    sa.ForeignKeyConstraint(['structure_id'], ['salary_structure.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('employee_salary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('structure_id', sa.Integer(), nullable=False),
    sa.Column('base_pay', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('effective_from', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['structure_id'], ['salary_structure.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('employee_id')
    )
    op.create_table('loan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('loan_name', sa.String(length=100), nullable=False),
    sa.Column('principal_amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('interest_rate', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('emi_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('loan_term_months', sa.Integer(), nullable=False),
    sa.Column('disbursement_date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payslip',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('payroll_period_id', sa.Integer(), nullable=False),
    sa.Column('gross_earning', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('total_deduction', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('net_pay', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['payroll_period_id'], ['payroll_period.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('loan_repayment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('loan_id', sa.Integer(), nullable=False),
    sa.Column('payslip_id', sa.Integer(), nullable=True),
    sa.Column('amount_paid', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['loan_id'], ['loan.id'], ),
    sa.ForeignKeyConstraint(['payslip_id'], ['payslip.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payslip_detail',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payslip_id', sa.Integer(), nullable=False),
    sa.Column('component_name', sa.String(length=100), nullable=False),
    sa.Column('component_type', sa.Enum('EARNING', 'DEDUCTION', name='salarycomponenttype'), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['payslip_id'], ['payslip.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payslip_detail')
    op.drop_table('loan_repayment')
    op.drop_table('payslip')
    op.drop_table('loan')
    op.drop_table('employee_salary')
    op.drop_table('user_roles')
    op.drop_table('salary_structure_component')
    op.drop_table('role_permissions')
    with op.batch_alter_table('employee', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_employee_employee_number'))

    op.drop_table('employee')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('salary_structure')
    op.drop_table('salary_component')
    op.drop_table('role')
    op.drop_table('permission')
    op.drop_table('payroll_period')
    op.drop_table('designation')
    op.drop_table('department')
    # ### end Alembic commands ###
